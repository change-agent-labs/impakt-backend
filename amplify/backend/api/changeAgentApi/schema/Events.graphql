type Propaganda
  @model(
    queries: { get: "getPropaganda", list: "listPropaganda" }
    mutations: {
      create: "createPropaganda"
      update: "updatePropaganda"
      delete: "deletePropaganda"
    }
  )
  @key(fields: ["region", "category", "title"])
  @key(name: "Org", fields: ["org", "category", "title"], queryField: "listPropagandaByOrg") {
  #@auth(
  #  rules: [
  #    {allow: owner, ownerField: "cognitoId", identityField: "cognito:sub" , operations: [create, update, delete, read]},
  #  ])
  # more:  https://github.com/aws-amplify/amplify-cli/issues/1277
  #real identity, used for auth and possible banning evil users
  author: User! @connection(keyField: "authorId")
  #ephemeric string used as a nick during creation - should be visible in FE
  authorNick: String!
  category: String!
  title: String!
  # org_range: MY_ORG::WWA::WTF
  content: String!
  resources: [Resource]
  region: String!
  org: String!
  #### autogen
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Event
  @model(
    queries: { get: "getEvent", list: "listEvent" }
    mutations: { create: "createEvent", update: "updateEvent", delete: "deleteEvent" }
  )
  @key(fields: ["region", "category", "title"])
  @key(name: "Org", fields: ["org", "category", "title"], queryField: "listEventByOrg") {
  #real identity, used for auth and possible banning evil users
  author: User! @connection(keyField: "authorId")
  #ephemeric string used as a nick during creation - should be visible in FE
  authorNick: String!
  category: String!
  title: String!
  # org_range: MY_ORG::WWA::WTF
  content: String!
  resources: [Resource]
  region: String!
  org: String!
  conversation: Conversation @connection(keyField: "conversationId")
  #### autogen
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Announcement
  @model(
    queries: { get: "getAnnouncement", list: "listAnnouncement" }
    mutations: {
      create: "createAnnouncement"
      update: "updateAnnouncement"
      delete: "deleteAnnouncement"
    }
  )
  @key(fields: ["region", "category", "title"])
  @key(name: "Org", fields: ["org", "category", "title"], queryField: "listAnnouncementByOrg") {
  #real identity, used for auth and possible banning evil users
  author: User! @connection(keyField: "authorId")
  #ephemeric string used as a nick during creation - should be visible in FE
  authorNick: String!
  category: String!
  title: String!
  # org_range: MY_ORG::WWA::WTF
  content: String!
  resources: [Resource]
  region: String!
  org: String!
  #### autogen
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

#for "aktualnosci page"
union Important = Announcement | Event
type Query {
  listAllImportantNotifications(region: String!): [Important]
  #  Get my user.
  me: User
}
